version: '3.8'

# Simple development setup - use docker-compose.dev.yml for advanced development
# or docker-compose.prod.yml for production deployment

services:
  linkedin-research-backend:
    build: .
    container_name: linkedin-research-backend
    ports:
      - "5001:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DATABASE_URL=sqlite:///data/linkedin_research.db
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - FIVESIM_API_KEY=${FIVESIM_API_KEY}
      - EMAILONDECK_API_KEY=${EMAILONDECK_API_KEY}
      - GEONODE_CREDENTIALS=${GEONODE_CREDENTIALS}
    volumes:
      - .:/app
      - /app/venv  # Exclude virtual environment
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - linkedin-research-network

  linkedin-research-frontend:
    image: nginx:alpine
    container_name: linkedin-research-frontend
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./static:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - linkedin-research-backend
    restart: unless-stopped
    networks:
      - linkedin-research-network

networks:
  linkedin-research-network:
    driver: bridge

